Readme:
	- Add more walk-thrus of common actions. (create new solution, …)
	- Look into using VCR for testing. @pri(low)

Commands:
	- Add hooks. @done(2017-03-31)
	- Add default options for commands. @done(2017-03-31)
	So you can say to always -V syncup, and nothing else.
	- Init command. @done(2016-11-28)
	- Empty sub-commands should return help. @done(2016-11-21)
	There are a bunch of empty sub-commands that prefix another layer. Such as
	assign, content, product, and others.  Those should be impemented as a ‘help’
	only command.  That is they should return help like the plain `murano` command,
	but just for their sub-section of things
	- Errors and Warnings should get sent to STDERR @done(2016-11-03)
	- Need a more consistent output format. 'pp' is still used in many places. @done(2016-11-03)
	Maybe have a tool setting for output format? json, yaml, pp, csv, table ?
	- Do we need rainbow since highline does ANSI color too? @done(2016-11-02)
	- Status will show {modules,eventhandlers} have changes when they don’t. @done(2016-09-23)
	- First time run needs to be smoothed out. @done(2016-08-09)
	- Default for most commands should be -same @done(2016-08-02)
	- Add Diff Command @done(2016-07-27)

Account:
	- token is refetched many times. Do this once per run. @done(2016-09-12)
	- Netrc library (or the netrc format) doesn't allow '#' in passwords. @done(2016-08-10)

Endpoints:
	- In fetch(); add content_type to script header if not application/json @done(2016-12-06)
	- Add support for multiple endpoints in one file @pri(high) @done(2016-11-18)
	- Add directory support like in modules @done(2016-07-26)

Files:
	- Switch to mime-types v3 @pri(low)
	- Add ignore patterns to config @done(2016-12-20)
	- Figure out how to make the hexed-sha checksum faster. @done(2016-09-23)
	- Fix upload. @done(2016-08-01)
	- Files won't update, they always delete then add. @done(2016-07-28)

Users and Roles:
	Much of this is stuck until we get more docs on the User/Role management
	- Figure out how to upload (create and update) user info.
	- Figure out how to add Roles to Users in the local data and upload it.
	- Fix diff for Users and Roles.
	- Have hash keys in the yaml be strings not symbols. (don't start with colon) @done(2016-07-27)

CORS:
	- Get working with sync up/down. @done(2016-10-28)
	- GET&PUT /cors data @done(2016-09-08)

TSDB:
	- For query, if no metrics on cmdline, then do listMetrics and use all. @done(2016-11-21)
	well, the first 1000 or whatever we get from a single call to listMetrics
	- Query should handle tags prefixed with @ to match write. @done(2016-11-21)
	- Add support for new TSDB service. @pri(high) @done(2016-11-03)

Timeseries:
	- Add CSV output option. @done(2016-09-09)

Product:
	- Add option for progress bar when uploading content files.
	- Support multiple products. @pri(low)
	Think about how this would work.  There is the syncing of the resources, and then
	some of the commands that use product.id.
	Which product.id maps to which resource file?
	- Auto convert exoline spec files into murano spec files on upload? @done(2016-10-27)
	Not doing this. Convert is there if you need it.
	- write alias command @done(2016-09-26)
	- Need to add way to set the product ID on a device eventhandler. @done(2016-08-01)

Service Device:
	- When listing and business.id is missing, gracefully fall back to --idonly @done(2016-09-12)

Config:
	- Store passwords in system Keychain on system that have a Keychain.
	mac OS does, various Linux desktops have a couple differnet ones.  Not sure about
	Windows.
	MacOS: https://github.com/xli/mac-keychain
	Windows8+: https://msdn.microsoft.com/en-us/library/windows/apps/xaml/hh465069.aspx
	Linux: https://en.wikipedia.org/wiki/GNOME_Keyring
	       https://en.wikipedia.org/wiki/KWallet

	Plus things like 1Password, LastPass, KeePass, and others.

	- Add config sync.bydefault to set which things sync{up,down} by default @done(2017-01-05)
	It is internally hardcoded to be -s, -a, -m, -e right now.
	- Add ENV['MR_CONFIGFILE'] path to file to load like --configfile @done(2016-09-22)
	- Maybe add dotenv support. @done(2016-09-22)
	- Think about adding dev,staging,prod system; how would that work? @done(2016-09-16)

SyncUpDown:
	- Document the hash keys for an item. @pri(high) @done(2017-03-30)
	Also consider turning that hash into a Struct
	- Allow specifying local files to limit actions to. @done(2017-03-03)

SolutionBase:
	- All network traffic is serialized. Make some parallel. not doing this. @done(2017-03-30)
	- Errors from the server should be displayed prettier. @done(2016-09-26)
	- JSON parse should use symbols for keys. @done(2016-09-01)
	- Add the --curl verbose option. @done(2016-08-12)
	- Rebuild how local names and paths are computed from remote items. @done(2016-07-27)

Windows:
	- Need to test with http://rubyinstaller.org on Windows. @pri(high) @done(2016-12-21)
	- Look into http://ocra.rubyforge.org for building an exec. @pri(high) @done(2016-12-21)

Bundles:
	- Revisit this idea. Its complexity may not be worth its value. @done(2017-03-30)
	- Work on design @done(2016-08-09)
	Thinking of something like VIM bundles.  A directory of directories. Each with a
	manafest file? (maybe)  A Bundle is a group of modules, endpoints, static files
	and the other things.

	There needs to be some layering logic added, where the bundles are stacked and
	then the top-level files are stack on top of that. This builds the final map of
	what gets uploaded to the server.

	For syncdown, bundles are considered to be read-only.

	The goal is to have things like Users or Debug that you just include into a
	project.  And it gives all of the library, routes, statics and whatnot that you
	need.

